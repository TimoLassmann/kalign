# =============================================================================
# Mixed C/C++ and Python Project .gitignore
# =============================================================================

# -----------------------------------------------------------------------------
# C/C++ Build Artifacts
# -----------------------------------------------------------------------------
# Object files
*.o
*.obj
*.elf

# Shared libraries
*.so
*.so.*
*.dylib
*.dll

# Static libraries
*.a
*.lib

# Executables
*.exe
*.out
*.app
kalign
kaligncpp
kalign_*_test
dssim

# Debug symbols
*.dSYM/
*.su
*.idb
*.pdb

# Precompiled headers
*.gch
*.pch

# Linker output
*.ilk
*.map
*.exp

# Build directories
build/
build*/
build_*/
build_test_*/
.cache/
compile_commands.json

# CMake
CMakeCache.txt
CMakeFiles/
CMakeScripts/
Testing/
Makefile
cmake_install.cmake
install_manifest.txt
*.cmake
!CMakeLists.txt
CTestTestfile.cmake
_deps/

# -----------------------------------------------------------------------------
# Zig Build System
# -----------------------------------------------------------------------------
zig-out/
zig-cache/

# -----------------------------------------------------------------------------
# Python Development
# -----------------------------------------------------------------------------
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo
*.pyd

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include this in version control.
#   https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include this in version control.
.idea/

# -----------------------------------------------------------------------------
# Python Package Building
# -----------------------------------------------------------------------------
# scikit-build
_skbuild/

# cibuildwheel
wheelhouse/

# Build artifacts from setup.py
build/
dist/
*.egg-info/

# -----------------------------------------------------------------------------
# Development Tools
# -----------------------------------------------------------------------------
# Visual Studio Code
.vscode/
*.code-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-workspace
*.sublime-project

# Xcode
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/
*.moved-aside
*.xccheckout
*.xcscmblueprint

# -----------------------------------------------------------------------------
# Operating System Files
# -----------------------------------------------------------------------------
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# -----------------------------------------------------------------------------
# Documentation and Archives (Keep Project Specific)
# -----------------------------------------------------------------------------
# Keep project documentation but ignore generated docs
!docs/
docs/_build/
docs/build/

# Archive directories (project specific - keep these)
# doc/          # Commented out - this might be needed
# dev/          # Commented out - this might be needed  
# old_src/      # Commented out - this might be needed

# But ignore common archive patterns
*.tar.gz
*.tgz
*.zip
*.rar
*.7z

# -----------------------------------------------------------------------------
# Temporary and Cache Files
# -----------------------------------------------------------------------------
# General temporary files
*.tmp
*.temp
*.log
*.bak
*.backup

# -----------------------------------------------------------------------------
# Project Specific
# -----------------------------------------------------------------------------
# Test data outputs
test_output/
*.out.fasta
*.out.clustal
*.out.msf

# Benchmark results
benchmark_results/
performance_*.txt

# Profiling data
*.prof
gmon.out
callgrind.out.*

# Large test files (keep small test data)
*.large.fasta
test_data/large/

